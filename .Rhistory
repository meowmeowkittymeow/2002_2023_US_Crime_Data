# Saving output to Data_Clean for easier access
Crime_Rates_1990_2023_rds <- here("Data_Clean", "Crime_Rates_1990_2023.rds")
saveRDS(Crime_Rates_1990_2023, Crime_Rates_1990_2023_rds)
#| label: Creating graphs
# Converting year to numeric for plotting
Crime_Rates_1990_2023$Year <- as.numeric(Crime_Rates_1990_2023$Year)
# Murder Rate Graph
Murder_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Murders_Rate_per_100k, group = 1)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 12, by = 2)) +
labs(title = "1990-2023 Murder Rates", x = "Year", y = "Murders per 100,000")
Murder_Rate_Graph_1990_2023
# Violent Crime Rate Graph
Violent_Crimes_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Violent_Crimes_Rate_per_100k, group = 1)) + # group = 1 ensures that all points are connected as one group
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 800, by = 100)) +
labs(title = "1990-2023 Violent Crime Rates", x = "Year", y = "Violent Crimes per 100,000")
Violent_Crimes_Rate_Graph_1990_2023
# Property Crime Rate Graph
Property_Crimes_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Property_Crimes_Rate_per_100k, group = 1)) +
geom_point() +  # Use points instead of lines
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 6000, by = 1000)) +
labs(title = "1990-2023 Property Crime Rates", x = "Year", y = "Property Crimes per 100,000")
Property_Crimes_Rate_Graph_1990_2023
#| label: Reading and joining 2020 and 2023 regional crime data, and 2023 national data
## Regional Crime:
Regional_Crime_2020_2023_Path <- here("Data_Raw", "Changes_2020_2023_Regional_Crime.xlsx")
Regional_Crime_2020_2023 <- read_excel(Regional_Crime_2020_2023_Path)
# Calculate all regional rates
Regional_Crime_2020_2023 <- Regional_Crime_2020_2023 |>
mutate(across(c(Murders, Violent_Crimes, Property_Crimes),
~ ifelse(Population > 0, (.x * 100000/Population), 0),
.names = "{.col}_Rate"))
# .names specifies naming convention
# {.col.} = Name of column
## National Crime:
# Removing data for all years prior to 2020 and 2021-2022
National_Crime_2020_2023 <- CIUS_2001_2023[-c(1:19, 21:22), ] |>
mutate(Region = NA) |>
rename(
Violent_Crimes_per_100k = Violent_Crimes_Rate_per_100k,
Murders_per_100k = Murders_Rate_per_100k,
Property_Crimes_per_100k = Property_Crimes_Rate_per_100k
)
# Calculate national rates
National_Crime_2020_2023 <- National_Crime_2020_2023 |>
mutate(across(c(Murders, Violent_Crimes, Property_Crimes),
~ ifelse(Population > 0, (.x * 100000/ Population), 0),
.names = "{.col}_Rate"))
# .names specifies naming convention
# {.col.} = Name of column
# Adding region variable and filling as national to join dataframes
National_Crime_2020_2023$Region <- "National"
Crime_Rates_2020_2023 <- rbind(Regional_Crime_2020_2023, National_Crime_2020_2023)
#| label: Calculating regional changes in crime rates between 2020 and 2023
Regional_Crime_Rate_Changes_2020_2023 <- Crime_Rates_2020_2023 |>
group_by(Region) |>
summarise(
# Taking 2020 and 2023 rates for each group and using them to calculate change of rates
Murders_Rate_2020 = Murders_Rate[Year == 2020],
Murders_Rate_2023 = Murders_Rate[Year == 2023],
Change_Murders_Rate = (Murders_Rate_2023 - Murders_Rate_2020) / Murders_Rate_2020,
Violent_Crimes_Rate_2020 = Violent_Crimes_Rate[Year == 2020],
Violent_Crimes_Rate_2023 = Violent_Crimes_Rate[Year == 2023],
Change_Violent_Crimes_Rate = (Violent_Crimes_Rate_2023 - Violent_Crimes_Rate_2020) / Violent_Crimes_Rate_2020,
Property_Crimes_Rate_2020 = Property_Crimes_Rate[Year == 2020],
Property_Crimes_Rate_2023 = Property_Crimes_Rate[Year == 2023],
Change_Property_Crimes_Rate = (Property_Crimes_Rate_2023 - Property_Crimes_Rate_2020) / Property_Crimes_Rate_2020,
)
#| label: Calculating regional changes in per 100k crime rates between 2020 and 2023
Regional_Crime_Rate_Changes_per_100k_2020_2023 <- Crime_Rates_2020_2023 |>
group_by(Region) |>
summarise(
Murder_Rate_2020_per_100k = Murders_per_100k[Year == 2020],
Murder_Rate_2023_per_100k = Murders_per_100k[Year == 2023],
Change_Murder_Rate_per_100k = (Murder_Rate_2023_per_100k - Murder_Rate_2020_per_100k) / Murder_Rate_2020_per_100k,
Violent_Crime_Rate_2020_per_100k = Violent_Crimes_per_100k[Year == 2020],
Violent_Crime_Rate_2023_per_100k = Violent_Crimes_per_100k[Year == 2023],
Change_Violent_Crime_Rate_per_100k = (Violent_Crime_Rate_2023_per_100k - Violent_Crime_Rate_2020_per_100k) / Violent_Crime_Rate_2020_per_100k,
Property_Crime_Rate_2020_per_100k = Property_Crimes_per_100k[Year == 2020],
Property_Crime_Rate_2023_per_100k = Property_Crimes_per_100k[Year == 2023],
Change_Property_Crime_Rate_per_100k = (Property_Crime_Rate_2023_per_100k - Property_Crime_Rate_2020_per_100k) / Property_Crime_Rate_2020_per_100k,
)
# Saving output to Data_Clean for easier access
Regional_Crime_Rate_Changes_per_100k_2020_2023_rds_path <- here("Data_Clean", "Regional_Crime_Rate_Changes_per_100k_2020_2023.rds")
saveRDS(Regional_Crime_Rate_Changes_per_100k_2020_2023, Regional_Crime_Rate_Changes_per_100k_2020_2023_rds_path)
#| label: Tidying 2020 Large City Data
Reported_Murders_Large_Cities_2020_Path <- here("Data_Raw", "Table_8_Offenses_Known_to_Law_Enforcement_by_State_by_City_2020.xlsx")
Reported_Murders_Large_Cities_2020 <- read_excel(Reported_Murders_Large_Cities_2020_Path)
# Extracting all column values
Reported_Murders_Large_Cities_2020_Columns <- as.character(Reported_Murders_Large_Cities_2020[5, ])
# Assigning column names to columns
colnames(Reported_Murders_Large_Cities_2020) <- Reported_Murders_Large_Cities_2020_Columns
# Removing headers and notes
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020[-c(1:5, 7695:7703), ]
# Filtering
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020 |>
mutate(
Population_2020 = as.numeric(Population),
`Murder and nonnegligent manslaughter` = as.numeric(`Murder and nonnegligent manslaughter`)
) |>
select(City, Population_2020, `Murder and nonnegligent manslaughter`) |>
rename(Murders_2020 = `Murder and nonnegligent manslaughter`)
# Calculate the Murder Rate using the renamed column
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020 |>
# If there is no data on murders or it equals 0, do not calculate murder rate. Otherwise,
# calculate murder rate.
mutate(Murder_Rate_2020 = ifelse(Murders_2020 == 0, NA, (Murders_2020 / Population_2020) * 100000))
#| label: Tidying 2023 Large City Data
#| message: false
Reported_Murders_Large_Cities_2023_Path <- here("Data_Raw", "Table_8_Offenses_Known_to_Law_Enforcement_by_State_by_City_2023.xlsx")
Reported_Murders_Large_Cities_2023 <- read_excel(Reported_Murders_Large_Cities_2023_Path)
# Extracting all column values
Reported_Murders_Large_Cities_2023_Columns <- as.character(Reported_Murders_Large_Cities_2023[3, ])
# Assigning column names to columns
colnames(Reported_Murders_Large_Cities_2023) <- Reported_Murders_Large_Cities_2023_Columns
# Removing headers and column names
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023[-c(1:3, 8369:8370), ]
# Filtering
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023 |>
mutate(Population_2023 = as.numeric(Population),
`Murder and\r\nnonnegligent\r\nmanslaughter` = as.numeric(`Murder and\r\nnonnegligent\r\nmanslaughter`)
) |>
select(City, Population_2023, `Murder and\r\nnonnegligent\r\nmanslaughter`) |>
rename(Murders_2023 = `Murder and\r\nnonnegligent\r\nmanslaughter`)
# Calculate the Murder rates
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023 |>
mutate(Murder_Rate_2023 = ifelse(Murders_2023 == 0, NA, (Murders_2023 / Population_2023) * 100000))
#| label: Extracting just relevant cities
# Adding state names to cities to specify cities (e.g., dealing with other Washingtons)
Reported_Murders_Large_Cities_2020 <- Add_States_2020(Reported_Murders_Large_Cities_2020)
Reported_Murders_Large_Cities_2023 <- Add_States_2023(Reported_Murders_Large_Cities_2023)
# If the does city already has the state appended, paste together.
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020 |>
mutate(City = ifelse(grepl(",", City), City, paste0(City, ", ", State))) |>
select(-State)
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023 |>
mutate(City = ifelse(grepl(",", City), City, paste0(City, ", ", State))) |>
select(-State)
#| label: Joining 2020 and 2023 data
# Creating list of cities in previous table
Cities <- c("New York, New York", "Los Angeles, California", "Chicago, Illinois", "Houston, Texas", "Philadelphia, Pennsylvania", "San Francisco, California", "Baltimore, Maryland", "Washington, District of Columbia", "Atlanta, Georgia", "Detroit, Michigan", "New Orleans, Louisiana", "Memphis, Tennessee", "Seattle, Washington")
# Using left-join to include only the cities in both data frames, as they have different counts
Changes_Reported_Murders_Cities <- left_join(Reported_Murders_Large_Cities_2020, Reported_Murders_Large_Cities_2023, by = "City") |>
drop_na() |> # Dropping cities missing data
mutate(Change_Murder_Rate_2020_2023 = (Murder_Rate_2023 - Murder_Rate_2020) / Murder_Rate_2020) |>
filter(City %in% Cities) |> #Filter out all irrelevant cities
select(-Population_2020, -Murders_2020, -Population_2023, -Murders_2023, )
# Loading in 2020 data for Atlanta, Baltimore, and Philadelphia and calculating 2020 murder rates and 2020-2023 change
Changes_Reported_Murders_ABP_Path <- here("Data_Raw", "Change_Murder_Rate_2020_2022_ABP.xlsx")
Changes_Reported_Murders_ABP <- read_excel(Changes_Reported_Murders_ABP_Path)
Changes_Reported_Murders_ABP <- Changes_Reported_Murders_ABP |>
mutate(Murder_Rate_2023 = Murder_Rate_2020 / (1 + Change_Murder_Rate_2020_2022),
Change_Murder_Rate_2020_2023 = (Murder_Rate_2023 - Murder_Rate_2020) / Murder_Rate_2020) |>
select(-Change_Murder_Rate_2020_2022)
#Binding city tables
City_Changes_Reported_Murders_2020_2023 <- rbind(Changes_Reported_Murders_Cities, Changes_Reported_Murders_ABP)
# Saving output to Data_Clean for easier access
City_Changes_Reported_Murders_2020_2023_rds_path <- here("Data_Clean", "City_Changes_Reported_Murders_2020_2023.rds")
saveRDS(City_Changes_Reported_Murders_2020_2023, City_Changes_Reported_Murders_2020_2023_rds_path)
View(City_Changes_Reported_Murders_2020_2023)
#| label: Creating graphs
# Converting year to numeric for plotting
Crime_Rates_1990_2023$Year <- as.numeric(Crime_Rates_1990_2023$Year)
# Murder Rate Graph
Murder_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Murders_Rate_per_100k, group = 1)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 12, by = 2)) +
labs(title = "1990-2023 Murder Rates", x = "Year", y = "Murders per 100,000")
Murder_Rate_Graph_1990_2023
# Violent Crime Rate Graph
Violent_Crimes_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Violent_Crimes_Rate_per_100k, group = 1)) + # group = 1 ensures that all points are connected as one group
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 800, by = 100)) +
labs(title = "1990-2023 Violent Crime Rates", x = "Year", y = "Violent Crimes per 100,000")
Violent_Crimes_Rate_Graph_1990_2023
# Property Crime Rate Graph
Property_Crimes_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Property_Crimes_Rate_per_100k, group = 1)) +
geom_point() +  # Use points instead of lines
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 6000, by = 1000)) +
labs(title = "1990-2023 Property Crime Rates", x = "Year", y = "Property Crimes per 100,000")
Property_Crimes_Rate_Graph_1990_2023
View(City_Changes_Reported_Murders_2020_2023)
#| label: Loading packages
#| warning: false
#| message: false
library(mosaic)
library(tidyverse)
library(ggplot2)
library(readxl)
library(plotly)
library(dplyr)
library(readr)
library(here)
#| label: Tidying Fact-Checked 1990-2000 data
#| message: false
# As per directions, using the previously fact-checked 1990-2000 data that was provided
Fact_Checked_1990_2000_Path <- here("Data_Raw", "Fact_Checked_Years.csv")
Fact_Checked_1990_2000 <- read.csv(Fact_Checked_1990_2000_Path)
#| label: Extracting 2001-2002 data from 2022 CIUS Estimates Table 1
#| message: false
# As per directions, using the 2020 CIUS data to extract 2001-2002 data
CIUS_2001_2002_Path <- here("Data_Raw", "Table_01_Crime_in_the_United_States_by_Volume_and_Rate_per_100000_Inhabitants_2001-2020.xls")
CIUS_2001_2002 <- read_excel(CIUS_2001_2002_Path)
# Extracting all column names
CIUS_2001_2002_Columns <- as.character(CIUS_2001_2002[3, ])
# Assigning column names to columns
colnames(CIUS_2001_2002) <- CIUS_2001_2002_Columns
# Removing headers and notes
CIUS_2001_2002 <- CIUS_2001_2002[-c(1:3, 24:46), ]
# Year to numeric and fixing 2001 because the exponent was incorrectly read
CIUS_2001_2002$Year <- as.numeric(CIUS_2001_2002$Year)
CIUS_2001_2002[1, "Year"] <- 2001
# Removing all other years and removing "NA" columns
CIUS_2001_2002 <- CIUS_2001_2002[-c(3:20), ]|>
select(-matches("^NA$"))
#| label: Extracting 2003 data from 2022 CIUS Estimates Table 1
#| message: false
# As per directions, using 2022 CIUS data to extract 2003 data
CIUS_2003_Path <- here("Data_Raw", "Table_1_Crime_in_the_United_States_by_Volume_and_Rate_per_100000_Inhabitants_2003-2022.xlsx")
CIUS_2003 <- read_excel(CIUS_2001_2002_Path)
# Extracting all column names
CIUS_2003_Columns <- as.character(CIUS_2003[3, ])
# Assigning column names to columns
colnames(CIUS_2003) <- CIUS_2003_Columns
# Filtering for 2003 data and removing "NA" columns
CIUS_2003 <- CIUS_2003 |>
select(-matches("^NA$")) |>
filter(Year == 2003)
#| label: Reading in 2004-2023 data from the 2023 CIUS Estimates Table 1
#| message: false
# As per directions, using 2023 CIUS data for 2004-2023
CIUS_2004_2023_Path <- here("Data_Raw", "Table_1_Crime_in_the_United_States_by_Volume_and_Rate_per_100000_Inhabitants_2004-2023.xlsx")
CIUS_2004_2023 <- read_excel(CIUS_2004_2023_Path)
# Extracting all column names
CIUS_2004_2023_Columns <- as.character(CIUS_2004_2023[3, ])
# Assigning column names to columns
colnames(CIUS_2004_2023) <- CIUS_2004_2023_Columns
# Removing headers and column names
CIUS_2004_2023 <- CIUS_2004_2023[-c(1:3, 24:45), ]
#| label: Binding 2001-2023 dataframes
#| message: false
# Using gsub to find \r\n or \n in the variable names and removing them. This standardizes
# the names, as the Windows-style and Unix-style line breaks are inconsistent between
# the two frames:
colnames(CIUS_2001_2002) <- gsub("\r\n|\n", "", colnames(CIUS_2001_2002))
colnames(CIUS_2003) <- gsub("\r\n|\n", "", colnames(CIUS_2003))
colnames(CIUS_2004_2023) <- gsub("\r\n|\n", "", colnames(CIUS_2004_2023))
# Tidying 2001-2002 variable names
CIUS_2001_2002 <- CIUS_2001_2002 |>
select(Year, Population1, Violentcrime2, `Violent crime rate`, `Murder andnonnegligent manslaughter`,
`Murder and nonnegligent manslaughter rate`, `Property crime`, `Property crime rate`) |>
rename(
Population = Population1,
Violent_Crimes = Violentcrime2,
Violent_Crime_Rate = `Violent crime rate`,
Murders = `Murder andnonnegligent manslaughter`,
Murder_Rate = `Murder and nonnegligent manslaughter rate`,
Property_Crimes = `Property crime`,
Property_Crime_Rate = `Property crime rate`
)
# Tidying 2003 to match 2001-2002 variable names
CIUS_2003 <- CIUS_2003 |>
select(Year, Population1, Violentcrime2, `Violent crime rate`, `Murder andnonnegligent manslaughter`,
`Murder and nonnegligent manslaughter rate`, `Property crime`, `Property crime rate`) |>
rename(
Population = Population1,
Violent_Crimes = Violentcrime2,
Violent_Crime_Rate = `Violent crime rate`,
Murders = `Murder andnonnegligent manslaughter`,
Murder_Rate = `Murder and nonnegligent manslaughter rate`,
Property_Crimes = `Property crime`,
Property_Crime_Rate = `Property crime rate`
)
# Tidying 2004-2023 to match 2001-2003 variable names
CIUS_2004_2023 <- CIUS_2004_2023 |>
select(Year, Population2, Violentcrime3, `Violent crime rate`, `Murder andnonnegligent manslaughter`,
`Murder and nonnegligent manslaughter rate`, `Property crime`, `Property crime rate`) |>
rename(
Population = Population2,
Violent_Crimes = Violentcrime3,
Violent_Crime_Rate = `Violent crime rate`,
Murders = `Murder andnonnegligent manslaughter`,
Murder_Rate = `Murder and nonnegligent manslaughter rate`,
Property_Crimes = `Property crime`,
Property_Crime_Rate = `Property crime rate`
)
# Binding all three data frames:
CIUS_2001_2023 <- rbind(CIUS_2001_2002, CIUS_2003, CIUS_2004_2023) |>
select(Year, Population, Violent_Crimes, Murders, Property_Crimes)
#| label: Calculating crime rates
# All variables to numeric:
CIUS_2001_2023 <- CIUS_2001_2023 |>
mutate(across(Population:Property_Crimes, as.numeric))
# Calculate all per 100k rates:
CIUS_2001_2023 <- CIUS_2001_2023 |>
mutate(across(c(Violent_Crimes:Property_Crimes),
~ ifelse(Population > 0, (.x / Population) * 100000, 0),
.names = "{.col}_Rate_per_100k"))
# .names specifies naming convention
# {.col.} = Name of column
#| label: Binding 1990-2000 and 2001-2023 data
# Creating dataframe to store just crime rates
CIUS_2001_2023_Rates <- CIUS_2001_2023 |>
select(Year, Violent_Crimes_Rate_per_100k, Property_Crimes_Rate_per_100k, Murders_Rate_per_100k)
# Matching 1990-2000 to 2001-2023 variable names
Fact_Checked_1990_2000 <- Fact_Checked_1990_2000 |>
rename(
Murders_Rate_per_100k = Murder_Rate,
Violent_Crimes_Rate_per_100k = Violent_Crime_Rate,
Property_Crimes_Rate_per_100k = Property_Crime_Rate
)
# Removing commas from values
Fact_Checked_1990_2000$Property_Crimes_Rate_per_100k <- gsub(",", "", Fact_Checked_1990_2000$Property_Crimes_Rate_per_100k)
# Converting values to numeric for plotting
Fact_Checked_1990_2000 <- Fact_Checked_1990_2000 |>
mutate(across(Year:Murders_Rate_per_100k, as.numeric))
# Binding 1990-200 and 2001-2023 crime rates
Crime_Rates_1990_2023 <- rbind(Fact_Checked_1990_2000, CIUS_2001_2023_Rates)
# Saving output to Data_Clean for easier access
Crime_Rates_1990_2023_rds <- here("Data_Clean", "Crime_Rates_1990_2023.rds")
saveRDS(Crime_Rates_1990_2023, Crime_Rates_1990_2023_rds)
#| label: Creating graphs
# Converting year to numeric for plotting
Crime_Rates_1990_2023$Year <- as.numeric(Crime_Rates_1990_2023$Year)
# Murder Rate Graph
Murder_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Murders_Rate_per_100k, group = 1)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 12, by = 2)) +
labs(title = "1990-2023 Murder Rates", x = "Year", y = "Murders per 100,000")
Murder_Rate_Graph_1990_2023
# Violent Crime Rate Graph
Violent_Crimes_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Violent_Crimes_Rate_per_100k, group = 1)) + # group = 1 ensures that all points are connected as one group
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 800, by = 100)) +
labs(title = "1990-2023 Violent Crime Rates", x = "Year", y = "Violent Crimes per 100,000")
Violent_Crimes_Rate_Graph_1990_2023
# Property Crime Rate Graph
Property_Crimes_Rate_Graph_1990_2023 <- Crime_Rates_1990_2023 |>
ggplot(aes(x = Year, y = Property_Crimes_Rate_per_100k, group = 1)) +
geom_point() +  # Use points instead of lines
geom_line() +
scale_x_continuous(breaks = seq(1990, 2023, by = 2)) +
scale_y_continuous(breaks = seq(0, 6000, by = 1000)) +
labs(title = "1990-2023 Property Crime Rates", x = "Year", y = "Property Crimes per 100,000")
Property_Crimes_Rate_Graph_1990_2023
#| label: Reading and joining 2020 and 2023 regional crime data, and 2023 national data
## Regional Crime:
Regional_Crime_2020_2023_Path <- here("Data_Raw", "Changes_2020_2023_Regional_Crime.xlsx")
Regional_Crime_2020_2023 <- read_excel(Regional_Crime_2020_2023_Path)
# Calculate all regional rates
Regional_Crime_2020_2023 <- Regional_Crime_2020_2023 |>
mutate(across(c(Murders, Violent_Crimes, Property_Crimes),
~ ifelse(Population > 0, (.x * 100000/Population), 0),
.names = "{.col}_Rate"))
# .names specifies naming convention
# {.col.} = Name of column
## National Crime:
# Removing data for all years prior to 2020 and 2021-2022
National_Crime_2020_2023 <- CIUS_2001_2023[-c(1:19, 21:22), ] |>
mutate(Region = NA) |>
rename(
Violent_Crimes_per_100k = Violent_Crimes_Rate_per_100k,
Murders_per_100k = Murders_Rate_per_100k,
Property_Crimes_per_100k = Property_Crimes_Rate_per_100k
)
# Calculate national rates
National_Crime_2020_2023 <- National_Crime_2020_2023 |>
mutate(across(c(Murders, Violent_Crimes, Property_Crimes),
~ ifelse(Population > 0, (.x * 100000/ Population), 0),
.names = "{.col}_Rate"))
# .names specifies naming convention
# {.col.} = Name of column
# Adding region variable and filling as national to join dataframes
National_Crime_2020_2023$Region <- "National"
Crime_Rates_2020_2023 <- rbind(Regional_Crime_2020_2023, National_Crime_2020_2023)
#| label: Calculating regional changes in crime rates between 2020 and 2023
Regional_Crime_Rate_Changes_2020_2023 <- Crime_Rates_2020_2023 |>
group_by(Region) |>
summarise(
# Taking 2020 and 2023 rates for each group and using them to calculate change of rates
Murders_Rate_2020 = Murders_Rate[Year == 2020],
Murders_Rate_2023 = Murders_Rate[Year == 2023],
Change_Murders_Rate = (Murders_Rate_2023 - Murders_Rate_2020) / Murders_Rate_2020,
Violent_Crimes_Rate_2020 = Violent_Crimes_Rate[Year == 2020],
Violent_Crimes_Rate_2023 = Violent_Crimes_Rate[Year == 2023],
Change_Violent_Crimes_Rate = (Violent_Crimes_Rate_2023 - Violent_Crimes_Rate_2020) / Violent_Crimes_Rate_2020,
Property_Crimes_Rate_2020 = Property_Crimes_Rate[Year == 2020],
Property_Crimes_Rate_2023 = Property_Crimes_Rate[Year == 2023],
Change_Property_Crimes_Rate = (Property_Crimes_Rate_2023 - Property_Crimes_Rate_2020) / Property_Crimes_Rate_2020,
)
#| label: Calculating regional changes in per 100k crime rates between 2020 and 2023
Regional_Crime_Rate_Changes_per_100k_2020_2023 <- Crime_Rates_2020_2023 |>
group_by(Region) |>
summarise(
Murder_Rate_2020_per_100k = Murders_per_100k[Year == 2020],
Murder_Rate_2023_per_100k = Murders_per_100k[Year == 2023],
Change_Murder_Rate_per_100k = (Murder_Rate_2023_per_100k - Murder_Rate_2020_per_100k) / Murder_Rate_2020_per_100k,
Violent_Crime_Rate_2020_per_100k = Violent_Crimes_per_100k[Year == 2020],
Violent_Crime_Rate_2023_per_100k = Violent_Crimes_per_100k[Year == 2023],
Change_Violent_Crime_Rate_per_100k = (Violent_Crime_Rate_2023_per_100k - Violent_Crime_Rate_2020_per_100k) / Violent_Crime_Rate_2020_per_100k,
Property_Crime_Rate_2020_per_100k = Property_Crimes_per_100k[Year == 2020],
Property_Crime_Rate_2023_per_100k = Property_Crimes_per_100k[Year == 2023],
Change_Property_Crime_Rate_per_100k = (Property_Crime_Rate_2023_per_100k - Property_Crime_Rate_2020_per_100k) / Property_Crime_Rate_2020_per_100k,
)
# Saving output to Data_Clean for easier access
Regional_Crime_Rate_Changes_per_100k_2020_2023_rds_path <- here("Data_Clean", "Regional_Crime_Rate_Changes_per_100k_2020_2023.rds")
saveRDS(Regional_Crime_Rate_Changes_per_100k_2020_2023, Regional_Crime_Rate_Changes_per_100k_2020_2023_rds_path)
#| label: Tidying 2020 Large City Data
Reported_Murders_Large_Cities_2020_Path <- here("Data_Raw", "Table_8_Offenses_Known_to_Law_Enforcement_by_State_by_City_2020.xlsx")
Reported_Murders_Large_Cities_2020 <- read_excel(Reported_Murders_Large_Cities_2020_Path)
# Extracting all column values
Reported_Murders_Large_Cities_2020_Columns <- as.character(Reported_Murders_Large_Cities_2020[5, ])
# Assigning column names to columns
colnames(Reported_Murders_Large_Cities_2020) <- Reported_Murders_Large_Cities_2020_Columns
# Removing headers and notes
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020[-c(1:5, 7695:7703), ]
# Filtering
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020 |>
mutate(
Population_2020 = as.numeric(Population),
`Murder and nonnegligent manslaughter` = as.numeric(`Murder and nonnegligent manslaughter`)
) |>
select(City, Population_2020, `Murder and nonnegligent manslaughter`) |>
rename(Murders_2020 = `Murder and nonnegligent manslaughter`)
# Calculate the Murder Rate using the renamed column
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020 |>
# If there is no data on murders or it equals 0, do not calculate murder rate. Otherwise,
# calculate murder rate.
mutate(Murder_Rate_2020 = ifelse(Murders_2020 == 0, NA, (Murders_2020 / Population_2020) * 100000))
#| label: Tidying 2023 Large City Data
#| message: false
Reported_Murders_Large_Cities_2023_Path <- here("Data_Raw", "Table_8_Offenses_Known_to_Law_Enforcement_by_State_by_City_2023.xlsx")
Reported_Murders_Large_Cities_2023 <- read_excel(Reported_Murders_Large_Cities_2023_Path)
# Extracting all column values
Reported_Murders_Large_Cities_2023_Columns <- as.character(Reported_Murders_Large_Cities_2023[3, ])
# Assigning column names to columns
colnames(Reported_Murders_Large_Cities_2023) <- Reported_Murders_Large_Cities_2023_Columns
# Removing headers and column names
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023[-c(1:3, 8369:8370), ]
# Filtering
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023 |>
mutate(Population_2023 = as.numeric(Population),
`Murder and\r\nnonnegligent\r\nmanslaughter` = as.numeric(`Murder and\r\nnonnegligent\r\nmanslaughter`)
) |>
select(City, Population_2023, `Murder and\r\nnonnegligent\r\nmanslaughter`) |>
rename(Murders_2023 = `Murder and\r\nnonnegligent\r\nmanslaughter`)
# Calculate the Murder rates
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023 |>
mutate(Murder_Rate_2023 = ifelse(Murders_2023 == 0, NA, (Murders_2023 / Population_2023) * 100000))
#| label: Extracting just relevant cities
# Adding state names to cities to specify cities (e.g., dealing with other Washingtons)
Reported_Murders_Large_Cities_2020 <- Add_States_2020(Reported_Murders_Large_Cities_2020)
Reported_Murders_Large_Cities_2023 <- Add_States_2023(Reported_Murders_Large_Cities_2023)
# If the does city already has the state appended, paste together.
Reported_Murders_Large_Cities_2020 <- Reported_Murders_Large_Cities_2020 |>
mutate(City = ifelse(grepl(",", City), City, paste0(City, ", ", State))) |>
select(-State)
Reported_Murders_Large_Cities_2023 <- Reported_Murders_Large_Cities_2023 |>
mutate(City = ifelse(grepl(",", City), City, paste0(City, ", ", State))) |>
select(-State)
#| label: Joining 2020 and 2023 data
# Creating list of cities in previous table
Cities <- c("New York, New York", "Los Angeles, California", "Chicago, Illinois", "Houston, Texas", "Philadelphia, Pennsylvania", "San Francisco, California", "Baltimore, Maryland", "Washington, District of Columbia", "Atlanta, Georgia", "Detroit, Michigan", "New Orleans, Louisiana", "Memphis, Tennessee", "Seattle, Washington")
# Using left-join to include only the cities in both data frames, as they have different counts
Changes_Reported_Murders_Cities <- left_join(Reported_Murders_Large_Cities_2020, Reported_Murders_Large_Cities_2023, by = "City") |>
drop_na() |> # Dropping cities missing data
mutate(Change_Murder_Rate_2020_2023 = (Murder_Rate_2023 - Murder_Rate_2020) / Murder_Rate_2020) |>
filter(City %in% Cities) |> #Filter out all irrelevant cities
select(-Population_2020, -Murders_2020, -Population_2023, -Murders_2023, )
# Loading in 2020 data for Atlanta, Baltimore, and Philadelphia and calculating 2020 murder rates and 2020-2023 change
Changes_Reported_Murders_ABP_Path <- here("Data_Raw", "Change_Murder_Rate_2020_2022_ABP.xlsx")
Changes_Reported_Murders_ABP <- read_excel(Changes_Reported_Murders_ABP_Path)
Changes_Reported_Murders_ABP <- Changes_Reported_Murders_ABP |>
mutate(Murder_Rate_2023 = Murder_Rate_2020 / (1 + Change_Murder_Rate_2020_2022),
Change_Murder_Rate_2020_2023 = (Murder_Rate_2023 - Murder_Rate_2020) / Murder_Rate_2020) |>
select(-Change_Murder_Rate_2020_2022)
#Binding city tables
City_Changes_Reported_Murders_2020_2023 <- rbind(Changes_Reported_Murders_Cities, Changes_Reported_Murders_ABP)
# Saving output to Data_Clean for easier access
City_Changes_Reported_Murders_2020_2023_rds_path <- here("Data_Clean", "City_Changes_Reported_Murders_2020_2023.rds")
saveRDS(City_Changes_Reported_Murders_2020_2023, City_Changes_Reported_Murders_2020_2023_rds_path)
City_Changes_Reported_Murders_2020_2023 <- readRDS("~/Desktop/2002_2023_US_Crime_Data/Data_Clean/City_Changes_Reported_Murders_2020_2023.rds")
View(City_Changes_Reported_Murders_2020_2023)
Crime_Rates_1990_2023 <- readRDS("~/Desktop/2002_2023_US_Crime_Data/Data_Clean/Crime_Rates_1990_2023.rds")
View(Crime_Rates_1990_2023)
Regional_Crime_Rate_Changes_per_100k_2020_2023 <- readRDS("~/Desktop/2002_2023_US_Crime_Data/Data_Clean/Regional_Crime_Rate_Changes_per_100k_2020_2023.rds")
View(Regional_Crime_Rate_Changes_per_100k_2020_2023)
